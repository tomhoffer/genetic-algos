services:
  redis:
    image: redis:7.4-alpine3.20
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - /Users/tomashoffer/Documents/Coding-Projects/redis-data:/data

  postgres-dev:
    image: postgres:16-alpine
    container_name: postgres-dev
    ports:
      - 5432:5432
    volumes:
      - ~/apps/tradingbot/postgres:/var/lib/postgresql/data

    environment:
      - POSTGRES_PASSWORD=Tradingbot_password
      - POSTGRES_USER=Tradingbot_user
      - POSTGRES_DB=trading_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U Tradingbot_user -d trading_db" ]
      interval: 5s
      timeout: 5s
      retries: 5

  tradingbot:
    build: src/tradingbot
    container_name: tradingbot
    volumes:
      - /Users/tomashoffer/Documents/Coding-Projects/genetic-algos:/src
    depends_on:
      - redis
      - postgres-dev

  tradingbot-server:
    ports:
      - 80:80
    build:
      dockerfile: src/tradingbot/server/Dockerfile
    container_name: tradingbot-server
    depends_on:
      postgres-dev:
        condition: service_healthy

  tradingbot-preprocessor:
    build:
      dockerfile: src/tradingbot/preprocessor/Dockerfile
    container_name: tradingbot-preprocessor
    depends_on:
      - postgres-dev

  test-generic:
    build:
      dockerfile: Dockerfile-test
    container_name: test-generic
    volumes:
      - /Users/tomashoffer/Documents/Coding-Projects/genetic-algos:/src

  test-tradingbot:
    build:
      dockerfile: src/tradingbot/Dockerfile-test
    container_name: test-tradingbot
    volumes:
      - /Users/tomashoffer/Documents/Coding-Projects/genetic-algos:/src
    depends_on:
      - redis
      - postgres-dev
